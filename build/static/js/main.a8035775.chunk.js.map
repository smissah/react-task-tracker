{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Hooray.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","weight","handleShowForm","onClick","style","background","className","Header","trueOrFalse","Task","task","handleDeleteTask","handleReminder","reminder","onDoubleClick","id","cursor","day","time","Tasks","tasks","map","index","AddTask","handleAddTask","useState","setText","setDay","setTime","setReminder","action","onSubmit","e","preventDefault","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","console","log","alert","htmlFor","type","placeholder","onChange","target","value","toString","currentTarget","checked","width","marginLeft","Hooray","App","setTasks","addTaskForm","setAddTaskForm","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","reponse","json","data","fetchSingleTask","url","taskId","method","filter","taskToToggle","updatedTask","headers","body","JSON","stringify","response","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8035775.chunk.js","sourcesContent":["import PropTypes from \"prop-types\"; //used to set default data types for stuff\r\n\r\nconst Button = ({ color, text, weight, handleShowForm }) => {\r\n  return (\r\n    <button\r\n      onClick={handleShowForm}\r\n      style={{ background: color, weight: weight }}\r\n      className=\"btn\"\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  weight: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\nexport default Button;\r\n","// import React from \"react\"; //not needed anymore - only for Class based components beayse it uses React.Component\n\nimport Button from \"./Button\";\n\nconst Header = ({ handleShowForm, trueOrFalse }) => (\n  <header className=\"header\">\n    <h1>Task Tracker</h1>\n    <Button\n      color=\"#58D68D\"\n      text={trueOrFalse === true ? \"-\" : \"+\"}\n      handleShowForm={handleShowForm}\n    />\n  </header>\n);\n\nexport default Header;\n","import React from \"react\";\n// import { FaTimes } from \"react-icons/fa\";\n\nconst Task = ({\n  // text,\n  // reminder,\n  // day,\n  // time,\n  // taskId,\n  task,\n  handleDeleteTask,\n  handleReminder,\n}) => {\n  return (\n    <div key={task.id}>\n      <div\n        className={` task ${task.reminder && \"reminder\"} `}\n        onDoubleClick={() => {\n          handleReminder(task.id);\n          //flip the bool and then change the class with a turnary\n        }}\n      >\n        <h3>\n          {task.text}\n          <p\n            style={{ color: \"#EC7063\", cursor: \"pointer\" }}\n            onClick={() => {\n              handleDeleteTask(task.id);\n            }}\n          >\n            {/* delete */} âœ–\n          </p>\n          {/* <FaTimes /> */}\n        </h3>\n        <p>\n          {task.day} @ {task.time}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Task;\n","import React from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, handleDeleteTask, handleReminder }) => {\r\n  return (\r\n    <div>\r\n      <p>Double-click a task to add reminder!</p> <hr />\r\n      {tasks.map((task, index) => (\r\n        <Task\r\n          key={index}\r\n          // taskId={id}\r\n          // text={text}\r\n          // time={time}\r\n          // reminder={reminder}\r\n          // day={day}\r\n          task={task}\r\n          handleDeleteTask={handleDeleteTask}\r\n          handleReminder={handleReminder}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\nimport { useState } from \"react\";\n\nconst AddTask = ({ handleShowForm, handleAddTask }) => {\n  const [text, setText] = useState(\"\");\n  const [day, setDay] = useState(\"\");\n  const [time, setTime] = useState(\"\");\n  const [reminder, setReminder] = useState(false);\n\n  const handleOnSubmit = (e) => {\n    e.preventDefault();\n\n    let today = new Date();\n    const dd = String(today.getDate()).padStart(2, \"0\");\n    const mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    const yyyy = today.getFullYear();\n\n    today = mm + \"/\" + dd + \"/\" + yyyy;\n    console.log(today);\n    if (!text) {\n      alert(\"Please enter a text\");\n      return;\n    }\n\n    if (!day) {\n      alert(\"Hmm, that date doesn't look right\");\n      console.log(day);\n      return;\n    }\n\n    handleAddTask({ text, day, time, reminder });\n    alert(\"tset2\");\n\n    setText(\"\");\n    setDay(\"\");\n    setTime(\"\");\n    setReminder(false);\n  };\n\n  return (\n    <form action=\"#\" className=\"add-form\" onSubmit={handleOnSubmit}>\n      <div className=\"form-control\">\n        <label htmlFor=\"task\">Task</label>\n        <input\n          type=\"text\"\n          placeholder=\"Add a task here!\"\n          onChange={(e) => {\n            setText(e.target.value);\n          }}\n        />\n      </div>\n      <div className=\"form-control\">\n        <label htmlFor=\"date-and-time\">Date & Time</label>\n        <input\n          type=\"date\"\n          placeholder=\"When is it due?\"\n          onChange={(e) => {\n            setDay(e.target.value.toString());\n            // console.log(e.target.value.toString());\n          }}\n        />\n        <input\n          type=\"time\"\n          placeholder=\"When is it due?\"\n          onChange={(e) => {\n            setTime(e.target.value.toString());\n          }}\n        />\n      </div>\n      <div className=\"form-control form-control-check\">\n        <label htmlFor=\"Set-reminder\">Reminder</label>\n        <input\n          type=\"checkbox\"\n          onChange={\n            (e) => setReminder(e.currentTarget.checked) //returns true or false if checked\n          }\n        />\n      </div>\n      <input\n        type=\"submit\"\n        value=\"Save Task\"\n        className=\"btn\"\n        style={{\n          width: \"55% \",\n          marginLeft: \"2rem\",\n        }}\n        // onSubmit={handleAddTask}\n      />\n      <input\n        type=\"button\"\n        value=\"Cancel\"\n        className=\"btn\"\n        style={{\n          background: \"#ED8175\",\n          width: \"35% \",\n          //   transform: \"translateX(50%)\",\n        }}\n        onClick={handleShowForm}\n      />\n    </form>\n  );\n};\n\nexport default AddTask;\n","import React from \"react\";\n\nconst Hooray = () => {\n  return (\n    <div>\n      <h3 className=\"completed\">Hooray, all tasks completed!</h3>\n    </div>\n  );\n};\n\nexport default Hooray;\n","import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport Hooray from \"./components/Hooray\";\nimport { useState, useEffect } from \"react\";\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [addTaskForm, setAddTaskForm] = useState(false);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      // console.log(tasksFromServer);\n      setTasks(tasksFromServer);\n      // console.log(tasks);\n      // return;\n    };\n    getTasks();\n    //? eslint-disable-next-line react-hooks/exhaustive-deps - this handles my error for putting the fetch outside of the useEffect\n  }, []);\n\n  //!fetchTasks\n  //put fetch out because i might want to use it else where\n  const fetchTasks = async () => {\n    const url = \"http://localhost:5000/tasks\";\n    //fetch returns a promise so await it\n    const reponse = await fetch(url);\n    const data = await reponse.json();\n    console.log(\"data from j.son\", data);\n    return data;\n  };\n\n  const fetchSingleTask = async (id) => {\n    const url = `http://localhost:5000/tasks/${id}`;\n    //fetch returns a promise so await it\n    const reponse = await fetch(url);\n    const data = await reponse.json();\n    console.log(\"data from j.son\", data);\n    return data;\n  };\n\n  //!removeTask\n  const handleDeleteTask = async (taskId) => {\n    //no need for variable as no data to be returned\n    await fetch(`http://localhost:5000/tasks/${taskId}`, {\n      method: \"DELETE\",\n    });\n    //delete request\n    console.log(`Removing task ${taskId}`);\n    setTasks(\n      tasks.filter((task) => {\n        return task.id !== taskId;\n      })\n    );\n  };\n\n  //!handleReminder\n\n  const handleReminder = async (taskId) => {\n    const taskToToggle = await fetchSingleTask(taskId);\n\n    const updatedTask = await {\n      ...taskToToggle,\n      reminder: !taskToToggle.reminder,\n    };\n\n    const reponse = await fetch(`http://localhost:5000/tasks/${taskId}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(updatedTask),\n    });\n\n    const data = await reponse.json();\n\n    console.log(`Reminder: ${taskId}`);\n    setTasks(\n      tasks.map(\n        (task) =>\n          task.id === taskId ? { ...task, reminder: data.reminder } : task\n        //break down the task object but change the reminder - OTHERWISE JUST RETURN THE OBJECT OR IT'LL BREAK\n      )\n    );\n  };\n\n  //!Show form\n  const handleShowForm = () => {\n    // console.log(addTaskForm);\n    setAddTaskForm(!addTaskForm);\n    // console.log(addTaskForm);\n    return addTaskForm;\n  };\n\n  //!add new task\n\n  const handleAddTask = async (task) => {\n    console.log(task);\n    const response = await fetch(`http://localhost:5000/tasks`, {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n    const data = await response.json();\n    console.log(\"data is:\", data);\n    setTasks([...tasks, data]);\n    console.log(tasks);\n\n    // no need for this as server/dbase makes id\n    //   const id = Math.floor(Math.random() * 100) + 1;\n    //   const newTask = { id, ...task };\n    //   setTasks([...tasks, newTask]);\n    setAddTaskForm(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header handleShowForm={handleShowForm} trueOrFalse={addTaskForm} />\n      {addTaskForm && (\n        <AddTask\n          handleAddTask={handleAddTask}\n          handleShowForm={handleShowForm}\n        />\n      )}\n\n      {tasks.length !== 0 || addTaskForm !== false ? (\n        <Tasks\n          tasks={tasks}\n          handleDeleteTask={handleDeleteTask}\n          handleReminder={handleReminder}\n        />\n      ) : (\n        <Hooray />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}